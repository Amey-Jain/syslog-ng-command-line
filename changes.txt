diff --git a/Makefile.am b/Makefile.am
index e56b847..9c16fd9 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -1,3 +1,4 @@
+
 SUBDIRS			=
 AM_MAKEFLAGS		= --no-print-directory
 AM_YFLAGS		= -Wno-yacc -Wno-other
diff --git a/configure.ac b/configure.ac
index 1a49e25..1b6cab6 100644
--- a/configure.ac
+++ b/configure.ac
@@ -10,6 +10,9 @@ dnl SOURCE_REVISION    - Revision of the source-tree, will added to the version
 dnl
 AC_INIT(syslog-ng/main.c)
 AC_CONFIG_MACRO_DIR([m4])
+
+AC_SUBST([LIBTOOL_DEPS])
+
 m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])
 
 dnl ***************************************************************************
diff --git a/lib/cfg-grammar.y b/lib/cfg-grammar.y
index f48e801..3e6326e 100644
--- a/lib/cfg-grammar.y
+++ b/lib/cfg-grammar.y
@@ -326,7 +326,7 @@ extern struct _StatsOptions *last_stats_options;
 %token KW_ON_ERROR                    10510
 
 %token KW_RETRIES                     10511
-
+%token KW_DESAMEY                     10512 
 /* END_DECLS */
 
 %code {
@@ -379,6 +379,7 @@ StatsOptions *last_stats_options;
 %type   <ptr> expr_stmt
 %type   <ptr> source_stmt
 %type   <ptr> dest_stmt
+%type   <ptr> desAmey_stmt  //data type added to desAmey_stmt
 %type   <ptr> filter_stmt
 %type   <ptr> parser_stmt
 %type   <ptr> rewrite_stmt
@@ -393,7 +394,7 @@ StatsOptions *last_stats_options;
 %type   <ptr> source_afinter
 %type   <ptr> source_plugin
 %type   <ptr> source_afinter_params
-
+%type   <ptr> desAmey_content //data type added to destAmey_content
 %type   <ptr> dest_content
 %type	<ptr> dest_items
 %type	<ptr> dest_item
@@ -485,6 +486,12 @@ dest_stmt
             free($2);
           }
 	;
+desAmey_stmt:KW_DESAMEY string '{' dest_content '}' ///made by me
+{
+  $$ = log_expr_node_new_destination($2,$4,&@1);
+  free($2);
+}
+;
 
 
 filter_stmt
@@ -650,8 +657,15 @@ dest_content
              $$ = log_expr_node_new_junction($2, &@$);
            }
          ;
-
-
+desAmey_content:
+{
+  cfg_lexer_push_contexy(lexer,LL_CONTEXT_DESTINATION,NULL,"desAmey");}
+dest_items
+{cfg_lexer_pop_context(lexer);}
+{
+  $$ = log_expr_node_new_junction($2,&@$);
+}
+;
 dest_items
         /* all destination drivers are added as an independent branch in a junction*/
         : dest_item semicolons dest_items	{ $$ = log_expr_node_append_tail(log_expr_node_new_pipe($1, &@1), $3); }
@@ -705,8 +719,7 @@ log_junction
         : KW_JUNCTION '{' log_forks '}'         { $$ = log_expr_node_new_junction($3, &@$); }
         ;
 
-log_last_junction
-
+log_last_junction:
         /* this rule matches the last set of embedded log {}
          * statements at the end of the log {} block.
          * It is the final junction and was the only form of creating
@@ -714,7 +727,7 @@ log_last_junction
          *
          * We emulate if the user was writing junction {} explicitly.
          */
-        : log_forks                             { $$ = $1 ? log_expr_node_new_junction($1, &@1) :  NULL; }
+log_forks                             { $$ = $1 ? log_expr_node_new_junction($1, &@1) :  NULL; }
         ;
 
 
@@ -1171,8 +1184,7 @@ file_dir_perm_option
 
 template_option
 	: KW_TS_FORMAT '(' string ')'		{ last_template_options->ts_format = cfg_ts_format_value($3); free($3); }
-	| KW_FRAC_DIGITS '(' LL_NUMBER ')'	{ last_template_options->frac_digits = $3; }
-	| KW_TIME_ZONE '(' string ')'		{ last_template_options->time_zone[LTZ_SEND] = g_strdup($3); free($3); }
+	| KW_FRAC_DIGITS '(' LL_NUMBER ')'	{ last_template_options->frac_digits = $3; }	| KW_TIME_ZONE '(' string ')'		{ last_template_options->time_zone[LTZ_SEND] = g_strdup($3); free($3); }
 	| KW_SEND_TIME_ZONE '(' string ')'      { last_template_options->time_zone[LTZ_SEND] = g_strdup($3); free($3); }
 	| KW_LOCAL_TIME_ZONE '(' string ')'     { last_template_options->time_zone[LTZ_LOCAL] = g_strdup($3); free($3); }
 	| KW_ON_ERROR '(' string ')'
diff --git a/lib/cfg-parser.c b/lib/cfg-parser.c
index 7b61227..ab20f1a 100644
--- a/lib/cfg-parser.c
+++ b/lib/cfg-parser.c
@@ -53,6 +53,7 @@ static CfgLexerKeyword main_keywords[] = {
   { "parser",             KW_PARSER },
   { "rewrite",            KW_REWRITE },
   { "destination",        KW_DESTINATION },
   { "log",                KW_LOG },
   { "junction",           KW_JUNCTION },
   { "channel",            KW_CHANNEL },
@@ -162,7 +163,8 @@ static CfgLexerKeyword main_keywords[] = {
   { "on",                 KW_YES },
   { "no",                 KW_NO },
   { "off",                KW_NO },
-  { NULL, 0 }
+  { NULL, 0 },
+  {"desAmey",KW_DESAMEY},
 };
 
 
diff --git a/lib/ivykis b/lib/ivykis
--- a/lib/ivykis
+++ b/lib/ivykis
@@ -1 +1 @@
-Subproject commit ec9066dcc66b33e3767b4729f86844549f004657
+Subproject commit ec9066dcc66b33e3767b4729f86844549f004657-dirty
diff --git a/lib/jsonc b/lib/jsonc
--- a/lib/jsonc
+++ b/lib/jsonc
@@ -1 +1 @@
-Subproject commit 259c5c0b5fe87c2db41e7a989cc0ab5865170d81
+Subproject commit 259c5c0b5fe87c2db41e7a989cc0ab5865170d81-dirty
diff --git a/lib/logsource.c b/lib/logsource.c
index ef931f5..b509d45 100644
--- a/lib/logsource.c
+++ b/lib/logsource.c
@@ -33,6 +33,7 @@
 
 #include <string.h>
 
+#define prn() printf("%s",__FILE__)
 gboolean accurate_nanosleep = FALSE;
 
 void
@@ -46,7 +47,7 @@ static inline void
 _flow_control_window_size_adjust(LogSource *self, guint32 window_size_increment)
 {
   guint32 old_window_size;
-
+  prn();
   window_size_increment += g_atomic_counter_get(&self->suspended_window_size);
   old_window_size = g_atomic_counter_exchange_and_add(&self->window_size, window_size_increment);
   g_atomic_counter_set(&self->suspended_window_size, 0);
@@ -62,7 +63,7 @@ _flow_control_rate_adjust(LogSource *self)
   /* NOTE: this is racy. msg_ack may be executing in different writer
    * threads. I don't want to lock, all we need is an approximate value of
    * the ACK rate of the last couple of seconds.  */
-
+  prn();
 #ifdef SYSLOG_NG_HAVE_CLOCK_GETTIME
   if (accurate_nanosleep && self->threaded)
     {
@@ -136,6 +137,8 @@ log_source_msg_ack(LogMessage *msg, AckType ack_type)
 {
   AckTracker *ack_tracker = msg->ack_record->tracker;
   ack_tracker_manage_msg_ack(ack_tracker, msg, ack_type);
+  prn();
+
 }
 
 void
@@ -144,6 +147,8 @@ log_source_flow_control_suspend(LogSource *self)
   g_atomic_counter_set(&self->suspended_window_size, g_atomic_counter_get(&self->window_size));
   g_atomic_counter_set(&self->window_size, 0);
   _flow_control_rate_adjust(self);
+  prn();
+
 }
 
 void
@@ -152,7 +157,7 @@ log_source_mangle_hostname(LogSource *self, LogMessage *msg)
   const gchar *resolved_name;
   gsize resolved_name_len;
   const gchar *orig_host;
-  
+  prn();  
   resolved_name = resolve_sockaddr_to_hostname(&resolved_name_len, msg->saddr, &self->options->host_resolve_options);
   log_msg_set_value(msg, LM_V_HOST_FROM, resolved_name, resolved_name_len);
 
@@ -201,7 +206,7 @@ gboolean
 log_source_init(LogPipe *s)
 {
   LogSource *self = (LogSource *) s;
-
+  prn();
   stats_lock();
   stats_register_counter(self->stats_level, self->stats_source | SCS_SOURCE, self->stats_id, self->stats_instance, SC_TYPE_PROCESSED, &self->recvd_messages);
   stats_register_counter(self->stats_level, self->stats_source | SCS_SOURCE, self->stats_id, self->stats_instance, SC_TYPE_STAMP, &self->last_message_seen);
@@ -213,7 +218,7 @@ gboolean
 log_source_deinit(LogPipe *s)
 {
   LogSource *self = (LogSource *) s;
-  
+  prn();
   stats_lock();
   stats_unregister_counter(self->stats_source | SCS_SOURCE, self->stats_id, self->stats_instance, SC_TYPE_PROCESSED, &self->recvd_messages);
   stats_unregister_counter(self->stats_source | SCS_SOURCE, self->stats_id, self->stats_instance, SC_TYPE_STAMP, &self->last_message_seen);
@@ -226,7 +231,7 @@ log_source_post(LogSource *self, LogMessage *msg)
 {
   LogPathOptions path_options = LOG_PATH_OPTIONS_INIT;
   gint old_window_size;
-
+  prn();
   ack_tracker_track_msg(self->ack_tracker, msg);
 
   /* NOTE: we start by enabling flow-control, thus we need an acknowledgement */
diff --git a/modules/afamqp/rabbitmq-c b/modules/afamqp/rabbitmq-c
--- a/modules/afamqp/rabbitmq-c
+++ b/modules/afamqp/rabbitmq-c
@@ -1 +1 @@
-Subproject commit 5348c697a0d6609d034d7bf571efc933556269a7
+Subproject commit 5348c697a0d6609d034d7bf571efc933556269a7-dirty
diff --git a/modules/afmongodb/mongo-c-driver b/modules/afmongodb/mongo-c-driver
--- a/modules/afmongodb/mongo-c-driver
+++ b/modules/afmongodb/mongo-c-driver
@@ -1 +1 @@
-Subproject commit 7415d3468de0c500fd6e630f7b52be181cbb66b3
+Subproject commit 7415d3468de0c500fd6e630f7b52be181cbb66b3-dirty
diff --git a/modules/diskq/tests/test_diskq.c b/modules/diskq/tests/test_diskq.c
index 6be27f9..96e2e79 100644
--- a/modules/diskq/tests/test_diskq.c
+++ b/modules/diskq/tests/test_diskq.c
@@ -21,7 +21,7 @@
  *
  */
 
-#include "logqueue.h"
+//#include "logqueue.h"
 #include "logqueue-fifo.h"
 #include "logqueue-disk.h"
 #include "logqueue-disk-reliable.h"
diff --git a/syslog-ng/main.c b/syslog-ng/main.c
index 8f78e53..efeca6c 100644
--- a/syslog-ng/main.c
+++ b/syslog-ng/main.c
@@ -139,6 +139,7 @@ version(void)
   printf("Module-Directory: %s\n", get_installation_path_for(SYSLOG_NG_PATH_MODULEDIR));
   printf("Module-Path: %s\n", resolvedConfigurablePaths.initial_module_path);
   printf("Available-Modules: ");
+  printf("Hi Amey. Feeling good?");
   plugin_list_modules(stdout, FALSE);
 
   printf("Enable-Debug: %s\n"
@@ -194,7 +195,7 @@ main(int argc, char *argv[])
 
   z_mem_trace_init("syslog-ng.trace");
 
-  g_process_set_argv_space(argc, (gchar **) argv);
+  g_process_set_argv_space(argc, (gchar **) argv);///THis is the line
 
   setup_caps();
 
@@ -219,7 +220,7 @@ main(int argc, char *argv[])
     }
 
   if (display_version)
-    {
+    { printf("Hi AMEY. FEELING GOOD?!!");
       interactive_mode();
       version();
       return 0;
